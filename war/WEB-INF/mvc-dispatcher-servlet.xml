
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
				http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">


	<!-- Need DI a message into controller, so auto component scan is disabled, 
		to avoid double create the userController bean. Only controller need this 
		hack. -->
	<context:component-scan base-package="com.principalmvl.lojackmykids.controller">
		<context:exclude-filter type="regex"
			expression="com.principalmvl.lojackmykids.controller.User.*" />
	</context:component-scan>
	<context:annotation-config />
	<mvc:annotation-driven />

	<!-- Bean to show you Di in GAE, via Spring, also init the UserController -->
	<bean class="com.principalmvl.lojackmykids.controller.UserController">
	</bean>
	<bean class="com.google.appengine.api.users.UserServiceFactory"
		factory-method="getUserService" />
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>

</beans>
